import { createPublicClient, createWalletClient, http, privateKeyToAccount } from 'viem';
import { baseSepolia } from 'viem/chains';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const CHAIN = baseSepolia;
const RPC = 'https://sepolia.base.org';
const CONTRACT = '0x602306cE966CB42FA39f6463cb401e8aF1080eBD';

// ABI –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ registerCreator
const baseTipAbi = [
  {
    inputs: [
      { internalType: 'string', name: 'name', type: 'string' },
      { internalType: 'string', name: 'bio', type: 'string' },
      { internalType: 'string', name: 'avatar', type: 'string' }
    ],
    name: 'registerCreator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  }
];

// –î–∞–Ω–Ω—ã–µ –∫—Ä–µ–∞—Ç–æ—Ä–æ–≤ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
const creators = [
  {
    name: 'Alice Chen',
    bio: 'Digital artist creating beautiful NFTs and illustrations',
    avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=alice&backgroundColor=b6e3f4,c0aede,d1d4f9,ffd5dc,ffdfbf'
  },
  {
    name: 'Bob Johnson',
    bio: 'Electronic music producer and DJ',
    avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=bob&backgroundColor=b6e3f4,c0aede,d1d4f9,ffd5dc,ffdfbf'
  },
  {
    name: 'Charlie Smith',
    bio: 'Full-stack developer building the future of web3',
    avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=charlie&backgroundColor=b6e3f4,c0aede,d1d4f9,ffd5dc,ffdfbf'
  },
  {
    name: 'Diana Rodriguez',
    bio: 'Professional gamer and streamer specializing in FPS games',
    avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=diana&backgroundColor=b6e3f4,c0aede,d1d4f9,ffd5dc,ffdfbf'
  },
  {
    name: 'Eve Thompson',
    bio: 'Abstract painter exploring the intersection of technology and art',
    avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=eve&backgroundColor=b6e3f4,c0aede,d1d4f9,ffd5dc,ffdfbf'
  },
  {
    name: 'Frank Wilson',
    bio: 'Jazz musician and composer creating ambient soundscapes',
    avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=frank&backgroundColor=b6e3f4,c0aede,d1d4f9,ffd5dc,ffdfbf'
  },
  {
    name: 'Grace Lee',
    bio: 'Blockchain developer and DeFi protocol architect',
    avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=grace&backgroundColor=b6e3f4,c0aede,d1d4f9,ffd5dc,ffdfbf'
  },
  {
    name: 'Henry Brown',
    bio: 'Indie game developer creating pixel art adventures',
    avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=henry&backgroundColor=b6e3f4,c0aede,d1d4f9,ffd5dc,ffdfbf'
  },
  {
    name: 'Iris Davis',
    bio: 'Digital sculptor and 3D artist pushing creative boundaries',
    avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=iris&backgroundColor=b6e3f4,c0aede,d1d4f9,ffd5dc,ffdfbf'
  },
  {
    name: 'Jack Miller',
    bio: 'Electronic music producer and sound designer',
    avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=jack&backgroundColor=b6e3f4,c0aede,d1d4f9,ffd5dc,ffdfbf'
  }
];

// ‚ö†Ô∏è –í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞
const OWNER_PRIVATE_KEY = '0xYOUR_TEST_PRIVATE_KEY_HERE';

async function main() {
  console.log('üöÄ Starting creator registration process...\n');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
  if (OWNER_PRIVATE_KEY === '0xYOUR_TEST_PRIVATE_KEY_HERE') {
    console.error('‚ùå –û–®–ò–ë–ö–ê: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π OWNER_PRIVATE_KEY');
    console.log('üìù –ü–æ–ª—É—á–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π ETH –Ω–∞ https://www.coinbase.com/faucets/base-ethereum-sepolia-faucet');
    process.exit(1);
  }

  const publicClient = createPublicClient({ 
    chain: CHAIN, 
    transport: http(RPC) 
  });
  
  const account = privateKeyToAccount(OWNER_PRIVATE_KEY);
  const walletClient = createWalletClient({ 
    account, 
    chain: CHAIN, 
    transport: http(RPC) 
  });

  console.log(`üë§ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ—Ç –∞–¥—Ä–µ—Å–∞: ${account.address}`);
  console.log(`üìã –í—Å–µ–≥–æ –∫—Ä–µ–∞—Ç–æ—Ä–æ–≤: ${creators.length}\n`);

  let totalGasUsed = 0n;
  let successCount = 0;
  let failCount = 0;

  for (let i = 0; i < creators.length; i++) {
    const { name, bio, avatar } = creators[i];
    
    try {
      console.log(`[${i + 1}/${creators.length}] –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º: ${name}`);
      
      // –û—Ü–µ–Ω–∫–∞ –≥–∞–∑–∞
      const gas = await publicClient.estimateContractGas({
        address: CONTRACT,
        abi: baseTipAbi,
        functionName: 'registerCreator',
        args: [name, bio, avatar],
        account: account.address,
      });
      
      console.log(`  ‚õΩ Estimate gas: ${gas.toString()}`);
      
      // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
      const hash = await walletClient.writeContract({
        address: CONTRACT,
        abi: baseTipAbi,
        functionName: 'registerCreator',
        args: [name, bio, avatar],
      });
      
      console.log(`  üì§ TX sent: https://base-sepolia.blockscout.com/tx/${hash}`);
      
      // –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
      const receipt = await publicClient.waitForTransactionReceipt({ hash });
      
      if (receipt.status === 'success') {
        console.log(`  ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ –≤ –±–ª–æ–∫–µ ${receipt.blockNumber}`);
        console.log(`  ‚õΩ Gas used: ${receipt.gasUsed.toString()}`);
        totalGasUsed += receipt.gasUsed;
        successCount++;
      } else {
        console.log(`  ‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å`);
        failCount++;
      }
      
      console.log(''); // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
      
      // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏
      await new Promise(resolve => setTimeout(resolve, 2000));
      
    } catch (error) {
      console.error(`  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ${name}:`, error.message);
      failCount++;
      console.log('');
    }
  }

  // –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  console.log('üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
  console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ: ${successCount}`);
  console.log(`‚ùå –û—à–∏–±–æ–∫: ${failCount}`);
  console.log(`‚õΩ –û–±—â–∏–π –≥–∞–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω: ${totalGasUsed.toString()}`);
  
  // –û—Ü–µ–Ω–∫–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ (–ø—Ä–∏–º–µ—Ä–Ω–∞—è)
  try {
    const gasPrice = await publicClient.getGasPrice();
    const totalCost = totalGasUsed * gasPrice;
    console.log(`üí∞ –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${(Number(totalCost) / 1e18).toFixed(6)} ETH`);
  } catch (error) {
    console.log('üí∞ –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É –≥–∞–∑–∞ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏');
  }
  
  console.log('\nüéâ –ü—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω!');
}

main().catch((error) => {
  console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});
